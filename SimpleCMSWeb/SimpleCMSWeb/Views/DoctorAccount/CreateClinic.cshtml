@model SimpleCMSWeb.Models.ModelView.ClinicCreateViewModel
@{
    ViewData["Title"] = "Create Clinic";
    Layout = "_DashboardDoctor";
}

<div class="container mt-4">
    <h3 class="mb-3">Clinic Management</h3>

    <!-- Toggle Button -->
    <button class="btn btn-primary mb-3" type="button" onclick="toggleClinicForm()">+ Add Clinic</button>

    <!-- Collapsible Form -->
    <div id="clinicFormSection" class="border p-3 mb-4 collapse">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4>Create Clinic</h4>
            <button class="btn btn-sm btn-outline-secondary" onclick="toggleClinicForm()">Close</button>
        </div>

        <form asp-action="CreateClinic" asp-controller="DoctorAccount" method="post" id="myform">
            @Html.AntiForgeryToken()
            @* <input type="hidden" asp-for="SelectedClinicId" id="SelectedClinicId" /> *@
            <!-- Clinic Search Field -->
            <div class="row g-3 mb-3">
                <div class="col-md-12 position-relative">
                    <label>Search Clinic</label>
                    <input type="text" id="clinicSearch" class="form-control"
                           placeholder="Search by clinic name, region, province, municipality or address"
                           autocomplete="off" />
                    <input type="hidden" asp-for="SelectedClinicId" id="SelectedClinicId" required />
                    <div id="clinicSearchResults" class="dropdown-menu w-100" style="display: none;"></div>
                </div>
            </div>

            <!-- Clinic Details Fields -->
            <hr />
            <p class="text-muted tx-sm">This is read only it only show the details of the clinic choice.</p>
            <div class="row g-3 mb-3">
                <div class="col-md-4">
                    <label>Clinic Name</label>
                    <input asp-for="ClinicName" id="ClinicName" class="form-control" readonly />
                </div>
                <div class="col-md-4">
                    <label>Contact Number</label>
                    <input asp-for="ContactNo" id="ContactNo" class="form-control" readonly />
                </div>
                <div class="col-md-4">
                    <label>Region</label>
                    <input asp-for="Region" id="Region" class="form-control"  readonly />
                </div>
                <div class="col-md-4">
                    <label>Province</label>
                    <input asp-for="Province" id="Province" class="form-control"  readonly />
                </div>
                <div class="col-md-4">
                    <label>Municipality</label>
                    <input asp-for="Municipality" id="Municipality" class="form-control" readonly  />
                </div>
                <div class="col-md-4">
                    <label>Additional Address</label>
                    <input asp-for="AdditionAddress" id="AdditionAddress" class="form-control" readonly />
                </div>
            </div>

            <hr />
            <h5>Clinic Schedules</h5>

            <button type="button" class="btn btn-outline-primary mb-3" id="addScheduleBtn">+ Add Schedule</button>

            <div id="schedule-container"></div>
            <input type="hidden" name="SchedulesJson" id="SchedulesJson" />

            <div class="mt-4">
                <button type="submit" class="btn btn-success">Submit Clinic</button>
            </div>
        </form>
    </div>
    <hr />
    <h4 class="mb-3">Clinics & Schedules</h4>

    <div class="table-responsive">
        <table class="table table-bordered align-middle">
            <thead class="table-light">
                <tr>
                    <th>Clinic Name</th>
                    <th>Contact No</th>
                    <th>Address</th>
                    <th>Schedules</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.ClinicDoctorsExsting != null && Model.ClinicDoctorsExsting.Any())
                {
                    foreach (var item in Model.ClinicDoctorsExsting)
                    {
                        <tr>
                            <td>@item.Clinic?.Name</td>
                            <td>@item.Clinic?.ContactNo</td>
                            <td>
                                @item.Clinic?.AdditionAddress
                                @item.Clinic?.Municipality?.MunicipalityName
                                @item.Clinic?.Municipality?.Province?.ProvinceName
                                @item.Clinic?.Municipality?.Province?.Region?.Regionname
                            </td>
                            <td>
                                @if (item.ClinicSchedules != null && item.ClinicSchedules.Any())
                                {
                                    <ul class="mb-0">
                                        @foreach (var sched in item.ClinicSchedules)
                                        {
                                            <li>
                                                <strong>@sched.DayOfWeek</strong>:
                                                @FormatTimeSpan(sched.StartTime) - @FormatTimeSpan(sched.EndTime)
                                            </li>
                                        }
                                    </ul>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center text-muted">
                            No clinics registered yet.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div id="editScheduleModalContainer"></div>

<!-- Toast Container -->
<div class="position-fixed top-0 end-0 p-3" style="z-index: 1055">
    <div id="successToast" class="toast align-items-center text-bg-success border-0 fade" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["SuccessMessage"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let schedules = [];

        // Clinic Search Functionality
        $(document).ready(function() {
            const clinicSearch = $('#clinicSearch');
            const resultsDropdown = $('#clinicSearchResults');

            clinicSearch.on('input', function() {
                const searchTerm = $(this).val().trim();

                if (searchTerm.length < 2) {
                    resultsDropdown.hide().empty();
                    return;
                }

                $.get('/DoctorAccount/SearchClinics', { term: searchTerm }, function(data) {
                    if (data.length > 0) {
                        let html = '';
                        data.forEach(clinic => {
                            const fullAddress = [
                                clinic.additionAddress,
                                clinic.municipality,
                                clinic.province,
                                clinic.region
                            ].filter(Boolean).join(', ');

                            html += `
                                <a class="dropdown-item clinic-result" href="#"
                                   data-id="${clinic.id}"
                                   data-name="${clinic.name}"
                                   data-contact="${clinic.contactNo}"
                                   data-region="${clinic.region}"
                                   data-province="${clinic.province}"
                                   data-municipality="${clinic.municipality}"
                                   data-address="${clinic.additionAddress}">
                                    <div class="fw-bold">${clinic.name}</div>
                                    <div class="small text-muted">${fullAddress}</div>
                                </a>
                            `;
                        });

                        resultsDropdown.html(html).show();
                    } else {
                        resultsDropdown.html('<div class="dropdown-item text-muted">No clinics found</div>').show();
                    }
                }).fail(function() {
                    resultsDropdown.html('<div class="dropdown-item text-danger">Error loading results</div>').show();
                });
            });

            // Handle click on search result
            $(document).on('click', '.clinic-result', function(e) {
                e.preventDefault();

                const $result = $(this);
                $('#SelectedClinicId').val($result.data('id'));
                $('#ClinicName').val($result.data('name'));
                $('#ContactNo').val($result.data('contact'));
                $('#Region').val($result.data('region'));
                $('#Province').val($result.data('province'));
                $('#Municipality').val($result.data('municipality'));
                $('#AdditionAddress').val($result.data('address'));

                clinicSearch.val($result.data('name'));
                resultsDropdown.hide();
            });

            // Hide dropdown when clicking outside
            $(document).on('click', function(e) {
                if (!$(e.target).closest('#clinicSearch, #clinicSearchResults').length) {
                    resultsDropdown.hide();
                }
            });

            // Keyboard navigation
            clinicSearch.on('keydown', function(e) {
                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    const $results = $('.clinic-result');
                    if ($results.length) {
                        $results.first().focus();
                    }
                }
            });

            $(document).on('keydown', '.clinic-result', function(e) {
                const $results = $('.clinic-result');
                const currentIndex = $results.index(this);

                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    if (currentIndex < $results.length - 1) {
                        $results.eq(currentIndex + 1).focus();
                    }
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    if (currentIndex > 0) {
                        $results.eq(currentIndex - 1).focus();
                    } else {
                        clinicSearch.focus();
                    }
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    $(this).click();
                } else if (e.key === 'Escape') {
                    resultsDropdown.hide();
                    clinicSearch.focus();
                }
            });
        });

        function toggleClinicForm() {
            const formSection = document.getElementById("clinicFormSection");
            const bsCollapse = new bootstrap.Collapse(formSection, { toggle: true });
        }

        function renderSchedules() {
            const container = document.getElementById("schedule-container");
            container.innerHTML = "";

            schedules.forEach((schedule, index) => {
                const row = document.createElement("div");
                row.className = "row mb-2 border rounded p-2 fade show";
                row.innerHTML = `
                    <div class="col-md-3">
                        <select class="form-select" onchange="updateSchedule(${index}, 'DayOfWeek', this.value)" required id="schedule">
                            <option value="">Select Day</option>
                            <option value="MON" ${schedule.DayOfWeek === 'MON' ? 'selected' : ''}>MON</option>
                            <option value="TUE" ${schedule.DayOfWeek === 'TUE' ? 'selected' : ''}>TUE</option>
                            <option value="WED" ${schedule.DayOfWeek === 'WED' ? 'selected' : ''}>WED</option>
                            <option value="THU" ${schedule.DayOfWeek === 'THU' ? 'selected' : ''}>THU</option>
                            <option value="FRI" ${schedule.DayOfWeek === 'FRI' ? 'selected' : ''}>FRI</option>
                            <option value="SAT" ${schedule.DayOfWeek === 'SAT' ? 'selected' : ''}>SAT</option>
                            <option value="SUN" ${schedule.DayOfWeek === 'SUN' ? 'selected' : ''}>SUN</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <input type="time" class="form-control" value="${schedule.StartTime || ''}" onchange="updateSchedule(${index}, 'StartTime', this.value)" required>
                    </div>
                    <div class="col-md-3">
                        <input type="time" class="form-control" value="${schedule.EndTime || ''}" onchange="updateSchedule(${index}, 'EndTime', this.value)" required>
                    </div>
                    <div class="col-md-3 d-flex align-items-center">
                        <button type="button" class="btn btn-danger" onclick="removeSchedule(${index})">Remove</button>
                    </div>
                `;
                container.appendChild(row);
            });

            document.getElementById("SchedulesJson").value = JSON.stringify(schedules);
        }

        function updateSchedule(index, field, value) {
            schedules[index][field] = value;
            renderSchedules();
        }

        function removeSchedule(index) {
            schedules.splice(index, 1);
            renderSchedules();
        }

        document.getElementById("addScheduleBtn").addEventListener("click", () => {
            schedules.push({ DayOfWeek: "", StartTime: "", EndTime: "" });
            renderSchedules();
        });

        // Show toast if TempData has a message
        window.addEventListener('DOMContentLoaded', () => {
            const toastEl = document.getElementById('successToast');
            if (toastEl && toastEl.querySelector('.toast-body').textContent.trim() !== "") {
                const toast = new bootstrap.Toast(toastEl, { animation: true });
                toast.show();
            }

            if (schedules.length === 0) {
            schedules.push({ DayOfWeek: "", StartTime: "", EndTime: "" });
            renderSchedules();
            }
        });

        //
                $(document).on('click', '.edit-schedule-btn', function() {
            const clinicDoctorId = $(this).data('clinicdoctorid');
            const $modalContainer = $('#editScheduleModalContainer');

            $modalContainer.html('<div class="text-center py-5"><div class="spinner-border text-primary"></div></div>');

            $.get(`/DoctorAccount/EditClinicSchedules?clinicDoctorId=${clinicDoctorId}`, function(html) {
                $modalContainer.html(html);
                $('#editScheduleModal').modal('show');
            }).fail(function() {
                $modalContainer.html('<p class="text-danger">Failed to load schedule editor</p>');
            });
        });

        document.getElementById('myform').addEventListener('submit', function(e) {
            const clinicname = document.getElementById('ClinicName').value.trim();
            // const schedule = document.getElementById('schedule').value.trim();

            if(!clinicname){
                e.preventDefault();
                alert("Please fill in all required fields.");

                return false;
            }
        });
    </script>

    <style>
        /* Clinic Search Dropdown Styling */
        #clinicSearchResults {
            max-height: 300px;
            overflow-y: auto;
            z-index: 1000;
            border: 1px solid rgba(0,0,0,.15);
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15);
            padding: 0;
        }

        .clinic-result {
            padding: 0.75rem 1.25rem;
            border-bottom: 1px solid #f0f0f0;
            cursor: pointer;
            transition: background-color 0.2s;
            display: block;
            text-decoration: none;
            color: inherit;
        }

            .clinic-result:hover, .clinic-result:focus {
                background-color: #f8f9fa;
                outline: none;
            }

        #clinicSearch {
            position: relative;
            z-index: 1001;
        }

        /* Highlight focused item for keyboard navigation */
        .clinic-result:focus {
            background-color: #e9ecef;
            box-shadow: inset 0 0 0 2px #0d6efd;
        }

        /* Schedule form styling */
        #schedule-container .row {
            transition: all 0.3s ease;
        }

        /* Table styling */
        .table th {
            white-space: nowrap;
        }

        .table td {
            vertical-align: middle;
        }
    </style>
}

@functions {
    public string FormatTimeSpan(TimeSpan time)
    {
        DateTime dateTime = DateTime.Today.Add(time);
        return dateTime.ToString("h:mmtt");
    }
}