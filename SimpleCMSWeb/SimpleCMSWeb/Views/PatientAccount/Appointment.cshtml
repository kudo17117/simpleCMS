@model SimpleCMSWeb.Models.Appointment

@{
    ViewData["Title"] = "Submit Appointment";
    Layout = "_DashboardPatient";

    var patientName = ViewBag.PatientName ?? "N/A";
}

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded-4">
        <div class="card-header bg-primary text-white rounded-top-4">
            <h4 class="mb-0"><i class="fas fa-calendar-plus"></i> Submit Appointment</h4>
        </div>

        <div class="card-body">
            <form asp-action="Create" method="post">
                @Html.AntiForgeryToken()

                <!-- Hidden backend fields -->
                <input type="hidden" asp-for="Patientid" />
                <input type="hidden" asp-for="Clinicid" />
                <input type="hidden" asp-for="Clinicdoctorid" />

                <input type="hidden" asp-for="Consultdate" />
                <input type="hidden" asp-for="Consulttime" />

                <div class="row g-4">
                    @if (Model.Clinicid == null)
                    {
                        <div class="row">
                            <!-- Region -->
                            <div class="col-md-4 form-group mt-3">
                                <label for="region">Region</label>
                                <select id="region" name="regionId" class="form-select" required>
                                    <option value="">Select Region</option>
                                </select>
                            </div>

                            <!-- Province -->
                            <div class="col-md-4 form-group mt-3">
                                <label for="province">Province</label>
                                <select id="province" name="provinceId" class="form-select" required disabled>
                                    <option value="">Select Province</option>
                                </select>
                            </div>

                            <!-- Municipality -->
                            <div class="col-md-4 form-group mt-3">
                                <label for="municipality">Municipality</label>
                                <select id="municipality" name="municipalityId" class="form-select" required disabled>
                                    <option value="">Select Municipality</option>
                                </select>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Clinic -->
                            <div class="col-md-4 form-group mt-3">
                                <label for="clinic">Clinic</label>
                                <select id="clinic" name="clinicId" class="form-select" required disabled>
                                    <option value="">Select Clinic</option>
                                </select>
                            </div>

                            <!-- Doctor -->
                            <div class="col-md-4 form-group mt-3">
                                <label for="doctor">Doctor</label>
                                <select id="doctor" name="clinicDoctorId" class="form-select" required disabled>
                                    <option value="">Select Doctor</option>
                                </select>
                            </div>

                            <!-- Date -->
                            <div class="col-md-4 form-group mt-3">
                                <label for="dateDynamic">Date</label>
                                <input type="text" name="date" class="form-control" id="dateDynamic" required disabled />
                            </div>

                        </div>

                        <div class="row mt-2">
                            <!-- Doctor Display -->
                            <div class="col-md-6">
                                <label class="form-label"><i class="fas fa-user-md me-1"></i> Doctor</label>
                                <input type="text" id="doctorNameDisplay" class="form-control" value="@ViewBag.DoctorName" readonly />
                            </div>

                            <!-- Patient Name -->
                            <div class="col-md-4 mt-3">
                                <label class="form-label"><i class="fas fa-user me-1"></i> Patient Name</label>
                                <input type="text" class="form-control" value="@patientName" readonly />
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row mt-2">
                            <!-- Doctor Display -->
                            <div class="col-md-6">
                                <label class="form-label"><i class="fas fa-user-md me-1"></i> Doctor</label>
                                <input type="text" id="doctorNameDisplay" class="form-control" value="@ViewBag.DoctorName" readonly />
                            </div>

                            <!-- Date -->
                            <div class="col-md-4 form-group mt-3">
                                <label for="dateDynamic">Date</label>
                                <input type="text" name="date" class="form-control" id="dateDynamic" required disabled />
                            </div>



                            <!-- Patient Name -->
                            <div class="col-md-4 mt-3">
                                <label class="form-label"><i class="fas fa-user me-1"></i> Patient Name</label>
                                <input type="text" class="form-control" value="@patientName" readonly />
                            </div>
                        </div>
                    }

                    <!-- Form Buttons -->
                    <div class="mt-4 text-end">
                        <button type="submit" class="btn btn-success px-4 py-2 rounded-pill">
                            <i class="fas fa-paper-plane me-1"></i> Submit Appointment
                        </button>
                        <button type="button" class="btn btn-outline-danger px-4 py-2 rounded-pill ms-2"
                                data-bs-toggle="modal" data-bs-target="#cancelModal">
                            <i class="fas fa-times me-1"></i> Cancel
                        </button>
                    </div>
                </div>

                <!-- Cancel Confirmation Modal -->
                <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content rounded-4">
                            <div class="modal-header bg-warning text-dark rounded-top-4">
                                <h5 class="modal-title" id="cancelModalLabel">
                                    <i class="fas fa-exclamation-triangle me-2"></i> Confirm Cancel
                                </h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to cancel and clear all appointment details?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary rounded-pill" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-danger rounded-pill" id="confirmCancel">Yes, Clear Fields</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        const allowedDaysMap = {
            Sunday: 0, Monday: 1, Tuesday: 2, Wednesday: 3,
            Thursday: 4, Friday: 5, Saturday: 6
        };

        const dayAbbreviationMap = {
            "SUN": "Sunday", "MON": "Monday", "TUE": "Tuesday",
            "WED": "Wednesday", "THU": "Thursday", "FRI": "Friday", "SAT": "Saturday"
        };

        let flatpickrInstanceDynamic = null;
        let flatpickrInstancePreselected = null;

        function initFlatpickr(selector, allowedDayNumbers, bookedDates) {
            return flatpickr(selector, {
                dateFormat: "Y-m-d",
                minDate: "today",
                allowInput: false,
                clickOpens: true,
                disable: [
                    function (date) {
                        const isAllowedWeekday = allowedDayNumbers.includes(date.getDay());
                        const isFullyBooked = bookedDates.includes(date.toISOString().split("T")[0]);
                        return !isAllowedWeekday || isFullyBooked;
                    }
                ],
                onChange: function (selectedDates) {
                    if (selectedDates.length > 0) {
                        const formatted = selectedDates[0].toISOString().split("T")[0];
                        $('#Consultdate').val(formatted);
                        $('#Consulttime').val("08:00");
                    }
                }
            });
        }

        $(function () {
            // --- Location Dropdowns ---
            $.getJSON('/Appointment/GetRegions', function (regions) {
                $.each(regions, function (i, r) {
                    $('#region').append(`<option value="${r.regionid}">${r.regionname}</option>`);
                });
            });

            $('#region').on('change', function () {
                const regionId = $(this).val();
                resetBelow('region');
                if (regionId) {
                    $('#province').prop('disabled', false);
                    $.getJSON(`/Appointment/GetProvinces?regionId=${regionId}`, function (provinces) {
                        $('#province').empty().append('<option value="">Select Province</option>');
                        $.each(provinces, function (i, p) {
                            $('#province').append(`<option value="${p.provinceId}">${p.provinceName}</option>`);
                        });
                    });
                }
            });

            $('#province').on('change', function () {
                const provinceId = $(this).val();
                const regionId = $('#region').val();
                resetBelow('province');
                if (provinceId && regionId) {
                    $('#municipality').prop('disabled', false);
                    $.getJSON(`/Appointment/GetMunicipalities?regionId=${regionId}&provinceId=${provinceId}`, function (municipalities) {
                        $('#municipality').empty().append('<option value="">Select Municipality</option>');
                        $.each(municipalities, function (i, m) {
                            $('#municipality').append(`<option value="${m.municipalityId}">${m.municipalityName}</option>`);
                        });
                    });
                }
            });

            $('#municipality').on('change', function () {
                const municipalityId = $(this).val();
                resetBelow('municipality');
                if (municipalityId) {
                    $('#clinic').prop('disabled', true).empty().append(`<option value="">Loading clinics...</option>`);
                    $.getJSON(`/Appointment/GetClinics?municipalityId=${municipalityId}`, function (clinics) {
                        $('#clinic').prop('disabled', false).empty().append(`<option value="">Select Clinic</option>`);
                        $.each(clinics, function (i, c) {
                            $('#clinic').append(`<option value="${c.id}">${c.name}</option>`);
                        });
                    });
                }
            });

            $('#clinic').on('change', function () {
                const clinicId = $(this).val();
                resetBelow('clinic');
                if (clinicId) {
                    $('#Clinicid').val(clinicId);
                    $('#doctor').prop('disabled', true).empty().append(`<option value="">Loading doctors...</option>`);
                    $.getJSON(`/Appointment/GetDoctors?clinicId=${clinicId}`, function (doctors) {
                        $('#doctor').prop('disabled', false).empty().append(`<option value="">Select Doctor</option>`);
                        $.each(doctors, function (i, d) {
                            $('#doctor').append(`<option value="${d.clinicDoctorId}">${d.fullName}</option>`);
                        });
                    });
                }
            });

            // --- Dynamic doctor selection ---
            $('#doctor').on('change', function () {
                const doctorId = $(this).val();
                const doctorName = $('#doctor option:selected').text();
                $('#Clinicdoctorid').val(doctorId);
                $('#doctorNameDisplay').val(doctorName);
                $('#dateDynamic').val('').prop('disabled', true);

                if (!doctorId) return;

                $.when(
                    $.getJSON(`/PatientAccount/GetDoctorSchedule?clinicDoctorId=${doctorId}`),
                    $.getJSON(`/PatientAccount/GetFullyBookedDates?clinicDoctorId=${doctorId}`)
                ).done(function (scheduleRes, bookedRes) {
                    $('#dateDynamic').prop('disabled', false);

                    const allowedDays = scheduleRes[0];
                    const bookedDates = bookedRes[0];
                    const fullDayNames = allowedDays.map(day => dayAbbreviationMap[day]);
                    const allowedDayNumbers = fullDayNames.map(day => allowedDaysMap[day]);

                    if (flatpickrInstanceDynamic) flatpickrInstanceDynamic.destroy();
                    flatpickrInstanceDynamic = initFlatpickr("#dateDynamic", allowedDayNumbers, bookedDates);
                });
            });

            // --- Pre-selected doctor on page load ---
            const preselectedDoctorId = $('#Clinicdoctorid').val();
            if (preselectedDoctorId) {
                $.when(
                    $.getJSON(`/PatientAccount/GetDoctorSchedule?clinicDoctorId=${preselectedDoctorId}`),
                    $.getJSON(`/PatientAccount/GetFullyBookedDates?clinicDoctorId=${preselectedDoctorId}`)
                ).done(function (scheduleRes, bookedRes) {
                    $('#dateDynamic').prop('disabled', false);

                    const allowedDays = scheduleRes[0];
                    const bookedDates = bookedRes[0];
                    const fullDayNames = allowedDays.map(d => dayAbbreviationMap[d]);
                    const allowedDayNumbers = fullDayNames.map(d => allowedDaysMap[d]);

                    if (flatpickrInstancePreselected) {
                        flatpickrInstancePreselected.destroy();
                    }
                    flatpickrInstancePreselected = initFlatpickr("#dateDynamic", allowedDayNumbers, bookedDates);
                });
            }

            // --- Form Submission ---
            $("form").on("submit", function (e) {
                e.preventDefault();
                const required = ['Patientid', 'Clinicid', 'Clinicdoctorid', 'Consultdate', 'Consulttime'];
                let valid = true;
                required.forEach(id => {
                    const field = document.querySelector(`[name="${id}"]`);
                    if (!field || !field.value.trim()) valid = false;
                });

                if (!valid) {
                    alert("Please complete all required fields.");
                    return;
                }

                const appointmentData = {
                    regionId: $('#region').val(),
                    clinicId: $('#clinic').val(),
                    clinicDoctorId: $('#doctor').val(),
                    doctorName: $('#doctor option:selected').text(),
                    dateConsult: $('#Consultdate').val(),
                    timeConsult: $('#Consulttime').val()
                };

                document.cookie = `AppointmentData=${encodeURIComponent(JSON.stringify(appointmentData))}; path=/`;

                const btn = $("button[type='submit']");
                btn.prop("disabled", true).html('<i class="fas fa-spinner fa-spin me-1"></i> Submitting...');

                setTimeout(() => {
                    document.cookie = "AppointmentData=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";
                    e.target.submit();
                }, 1500);
            });

            // --- Cancel Button ---
            $("#confirmCancel").on("click", function () {
                ['Clinicid', 'Clinicdoctorid', 'Consultdate', 'Consulttime'].forEach(id => {
                    $(`[name="${id}"]`).val('');
                });

                $('input.form-control[readonly]').val('');

                const modal = bootstrap.Modal.getInstance(document.getElementById('cancelModal'));
                modal.hide();

                fetch('@Url.Action("ClearAppointmentSession", "PatientAccount")', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val(),
                        'Content-Type': 'application/json'
                    }
                }).then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            document.cookie = "AppointmentData=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";
                            window.location.href = '@Url.Action("Appointment", "PatientAccount")';
                        }
                    }).catch(err => console.error("Clear session failed:", err));
            });
        });

        function resetBelow(level) {
            const ids = ['region', 'province', 'municipality', 'clinic', 'doctor', 'dateDynamic'];
            const index = ids.indexOf(level);
            for (let i = index + 1; i < ids.length; i++) {
                const $el = $('#' + ids[i]);
                if ($el.is('select')) {
                    $el.empty().append(`<option value="">Select ${capitalize(ids[i])}</option>`);
                } else {
                    $el.val('');
                }
                $el.prop('disabled', true);
            }
        }

        function capitalize(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }
    </script>
}
