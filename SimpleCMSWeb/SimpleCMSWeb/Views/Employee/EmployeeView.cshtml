@model IEnumerable<SimpleCMSWeb.Models.Employee>
@{
    Layout = "_DashboardAdmin";
    var currentFilter = ViewBag.CurrentFilter as string;
    var currentPage = (int)ViewBag.CurrentPage;
    var totalPages = (int)ViewBag.TotalPages;
}

<div class="container border-1 shadow-sm rounded-4 p-4 mb-5">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-4">
        <h4 class="fw-bold mb-3 mb-md-0">Employee Directory</h4>

        <form id="employeeSearchForm" method="get" asp-action="EmployeeView" class="d-flex">
            <div class="input-group">
                <input type="text" name="searchString" value="@currentFilter" class="form-control rounded-start-pill" placeholder="Search name or email..." />
                <button class="btn btn-primary rounded-end-pill px-4" type="submit">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </form>
    </div>

    <div id="employeeTable">
        <div class="table-responsive">
            <table class="table align-middle mb-0 table-hover">
                <thead class="table-light">
                    <tr>
                        <th>Name</th>
                        <th>Position</th>
                        <th>Email</th>
                        <th>Contact</th>
                        <th class="text-center">Status</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var em in Model)
                    {
                        <tr class="align-middle" data-id="@em.Employeeid">
                            <td class="fw-semibold">@em.LastName, @em.FirstName</td>
                            <td>@em.EmployeeType?.EmployeeTypeDescription</td>
                            <td>@em.Email</td>
                            <td>@em.ContactNo</td>
                            <td class="text-center">
                                <span class="badge @(em.IsActive ? "bg-success" : "bg-secondary")">
                                    @(em.IsActive ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-outline-secondary btn-sm view-details-btn"
                                            data-id="@em.Employeeid" data-bs-toggle="modal" data-bs-target="#employeeDetailsModal">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-primary btn-sm edit-employee-btn"
                                            data-id="@em.Employeeid" data-bs-toggle="modal" data-bs-target="#editEmployeeModal">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button type="button"
                                            class="btn btn-outline-danger btn-sm delete-employee-btn"
                                            data-id="@em.Employeeid"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteConfirmationModal">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center mb-0">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link mx-1" style="border-radius: 10px;"
                       asp-action="EmployeeView"
                       asp-route-page="@(currentPage - 1)"
                       asp-route-searchString="@currentFilter">Previous</a>
                </li>
                @for (var i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link mx-1" style="border-radius: 10px;"
                           asp-action="EmployeeView"
                           asp-route-page="@i"
                           asp-route-searchString="@currentFilter">@i</a>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link mx-1" style="border-radius: 10px;"
                       asp-action="EmployeeView"
                       asp-route-page="@(currentPage + 1)"
                       asp-route-searchString="@currentFilter">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Employee Details Modal -->
<div class="modal fade" id="employeeDetailsModal" tabindex="-1" aria-labelledby="employeeDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="employeeDetailsModalLabel">Employee Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="employeeDetailsContent">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Employee Modal -->
<div class="modal fade" id="editEmployeeModal" tabindex="-1" aria-labelledby="editEmployeeModalLabel">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="editEmployeeModalLabel">Edit Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="editEmployeeContent">
                <div class="text-center py-5">
                    <div class="spinner-border text-warning" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header">
                <h5 class="modal-title fw-bold">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-0">Are you sure you want to delete this employee?</p>
            </div>
            <div class="modal-footer">
                <form id="deleteEmployeeForm" method="post" asp-action="DeleteEmployee" asp-controller="Employee">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="deleteEmployeeId" name="employeeId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .table thead th {
        white-space: nowrap;
    }

    .table tbody tr:hover {
        background-color: #f9fafb;
    }

    .btn-group .btn {
        width: 34px;
        height: 34px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }
</style>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        $(function () {
            // Enhanced Live Search with Pagination Support
            const searchInput = $('input[name="searchString"]');
            let searchTimeout;
            const currentPage = @currentPage;

            // Live search on input with debounce
            searchInput.on('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(performSearch, 300);
            });

            // Handle form submit to prevent page reload
            $('#employeeSearchForm').on('submit', function(e) {
                e.preventDefault();
                clearTimeout(searchTimeout);
                performSearch();
            });

            function performSearch() {
                const searchTerm = searchInput.val().trim();
                const url = $('#employeeSearchForm').attr('action');

                // Show loading indicator
                $('#employeeTable').html(`
                    <div class="text-center py-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                `);

                $.get(url, { searchString: searchTerm, page: currentPage }, function(data) {
                    const newContent = $(data).find('#employeeTable').html();
                    $('#employeeTable').html(newContent);
                    updatePaginationLinks(searchTerm);
                }).fail(function() {
                    $('#employeeTable').html('<div class="alert alert-danger">Failed to load results</div>');
                });
            }

            function updatePaginationLinks(searchTerm) {
                $('.page-link').each(function() {
                    const link = $(this);
                    let href = link.attr('href');
                    if (href) {
                        // Update or add searchString parameter
                        const url = new URL(href, window.location.origin);
                        url.searchParams.set('searchString', searchTerm);
                        link.attr('href', url.pathname + url.search);
                    }
                });
            }

            // Existing modal and form handlers (unchanged)
            $(document).on('click', '.view-details-btn', function () {
                const id = $(this).data('id');
                const $modal = $('#employeeDetailsContent');
                $modal.html('<div class="text-center py-5"><div class="spinner-border text-primary"></div></div>');
                $.get(`/Employee/Details/${id}`, function (html) {
                    $modal.html(html);
                }).fail(() => {
                    $modal.html('<p class="text-danger text-center">Failed to load details.</p>');
                });
            });

            $(document).on('click', '.edit-employee-btn', function () {
                const id = $(this).data('id');
                const $modal = $('#editEmployeeContent');
                $modal.html('<div class="text-center py-5"><div class="spinner-border text-warning"></div></div>');
                $.get(`/Employee/Edit/${id}`, function (html) {
                    $modal.html(html);
                    $.validator.unobtrusive.parse($modal);
                }).fail(() => {
                    $modal.html('<p class="text-danger text-center">Failed to load edit form.</p>');
                });
            });

            $(document).on('submit', '#updateEmployeeForm', function (e) {
                e.preventDefault();
                const form = $(this);
                const url = form.attr('action');

                $('body').append(`
                    <div id="loadingOverlay" style="position:fixed;top:0;left:0;width:100%;height:100%;
                        background-color:rgba(255,255,255,0.8);z-index:1060;display:flex;align-items:center;justify-content:center;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                `);

                $.ajax({
                    type: 'POST',
                    url: url,
                    data: new FormData(form[0]),
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        $('#loadingOverlay').remove();

                        if (response.success === true) {
                            toastr.success('Employee updated successfully');

                            const editModalEl = document.getElementById('editEmployeeModal');
                            let editModal = bootstrap.Modal.getInstance(editModalEl);
                            if (!editModal) {
                                editModal = new bootstrap.Modal(editModalEl);
                            }
                            editModal.hide();

                            // Refresh table after update
                            performSearch();
                        } else {
                            if (response.message) {
                                toastr.error(response.message);
                            } else if ($(response).find('.validation-summary-errors').length > 0) {
                                $('#editEmployeeContent').html(response);
                                $.validator.unobtrusive.parse('#editEmployeeContent');
                            } else {
                                toastr.error('Update failed');
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        $('#loadingOverlay').remove();
                        toastr.error('An error occurred while updating. Please try again.');
                        console.error('Update error:', error);
                    }
                });
            });

            $(document).on('click', '.delete-employee-btn', function() {
                const employeeId = $(this).data('id');
                $('#deleteEmployeeId').val(employeeId);
            });

            $(document).on('submit', '#deleteEmployeeForm', function(e) {
                e.preventDefault();

                const form = $(this);
                const employeeId = $('#deleteEmployeeId').val();

                form.find('button[type="submit"]').prop('disabled', true).html(
                    '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...'
                );

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function(response) {
                        $('#deleteConfirmationModal').modal('hide');

                        toastr.success('Employee deleted successfully', 'Success', {
                            timeOut: 3000,
                            positionClass: 'toast-top-right',
                            progressBar: true
                        });

                        // Refresh table after delete
                        performSearch();
                    },
                    error: function(xhr) {
                        toastr.error('Failed to delete employee', 'Error', {
                            timeOut: 3000
                        });
                        console.error("Delete error:", xhr.responseText);
                    },
                    complete: function() {
                        form.find('button[type="submit"]').prop('disabled', false).text('Delete');
                    }
                });
            });
        });
    </script>
}