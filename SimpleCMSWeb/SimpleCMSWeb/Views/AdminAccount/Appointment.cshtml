@model List<SimpleCMSWeb.Models.Appointment>

@{
    Layout = "_DashboardAdmin";
    var pageSize = 4;
}

<div class="container border-1 shadow-sm rounded-4 p-4 mb-5">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-4">
        <h4 class="fw-bold mb-3 mb-md-0">Appointments</h4>

        <div class="d-flex">
            <button id="toggleDeleteMode" class="btn btn-outline-danger btn-sm">
                <i class="bi bi-trash" id="deleteIcon"></i>
            </button>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table align-middle mb-0 table-hover" id="appointmentTable">
            <thead class="table-light">
                <tr>
                    <th>Select</th>
                    <th>Patient Name</th>
                    <th>Book Clinic</th>
                    <th>Book Doctor</th>
                    <th>Consult Date</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    var item = Model[i];
                    var doctorName = item.Clinicdoctor?.Employee?.FirstName + " " + item.Clinicdoctor?.Employee?.LastName;
                    var fullDoctorName = string.IsNullOrWhiteSpace(doctorName) ? "No Employee" : doctorName;
                    <tr class="appointment-row align-middle" data-index="@i">
                        <td>
                            <input type="checkbox" class="form-check-input delete-checkbox d-none" value="@item.Id" />
                        </td>
                        <td class="fw-semibold">@item.Patient?.Firstname @item.Patient?.Lastname</td>
                        <td>@item.Clinic?.Name</td>
                        <td>Dr. @fullDoctorName</td>
                        <td>@item.Consultdate</td>
                        <td class="text-center">
                            <div class="btn-group" role="group">
                                <button class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#detailsModal-@item.Id">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editModal-@item.Id">
                                    <i class="bi bi-pencil"></i>
                                </button>
                            </div>
                        </td>
                    </tr>

                    <!-- View Modal -->
                    <div class="modal fade" id="detailsModal-@item.Id" tabindex="-1" aria-labelledby="detailsModalLabel-@item.Id" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content rounded-4 shadow">
                                <div class="modal-header">
                                    <h5 class="modal-title fw-bold" id="detailsModalLabel-@item.Id">Appointment Details</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body text-start">
                                    <p><strong>Server ID:</strong> @item.ServerId</p>
                                    <p><strong>Sequence No:</strong> @item.Sequenceno</p>
                                    <p><strong>Patient:</strong> @item.Patient?.Firstname @item.Patient?.Lastname</p>
                                    <p><strong>Clinic:</strong> @item.Clinic?.Name</p>
                                    <p><strong>Doctor:</strong> @fullDoctorName</p>
                                    <p><strong>Consult Date:</strong> @item.Consultdate</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Edit Modal -->
                    <div class="modal fade" id="editModal-@item.Id" tabindex="-1" aria-labelledby="editModalLabel-@item.Id" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content rounded-4 shadow">
                                <div class="modal-header">
                                    <h5 class="modal-title fw-bold" id="editModalLabel-@item.Id">Edit Appointment</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <form id="editForm-@item.Id">
                                    <div class="modal-body text-start">
                                        <input type="hidden" name="AppointmentId" value="@item.Id" />

                                        <div class="mb-3">
                                            <label class="form-label">Patient First Name</label>
                                            <input type="text" class="form-control" name="PatientFirstname" value="@item.Patient?.Firstname" />
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">Patient Last Name</label>
                                            <input type="text" class="form-control" name="PatientLastname" value="@item.Patient?.Lastname" />
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">Clinic Name</label>
                                            <input type="text" class="form-control" name="ClinicName" value="@item.Clinic?.Name" disabled />
                                            <input type="hidden" name="ClinicName" value="@item.Clinic?.Name" />
                                        </div>

                                        <div class="mb-3">
                                            <label class="form-label">Consult Date</label>
                                            <input type="date" class="form-control" name="ConsultDate" value="@item.Consultdate" />
                                        </div>
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                        <button type="submit" class="btn btn-primary">Save Changes</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination Controls -->
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center mb-0 small" id="pagination"></ul>
    </nav>
</div>

<!-- Toast Container -->
<div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 9999;">
    <div id="deleteToast" class="toast align-items-center text-white bg-success border-0" role="alert">
        <div class="d-flex">
            <div class="toast-body">
                Appointments deleted successfully.
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="confirmDeleteLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the selected appointments?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelDelete">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const pageSize = @pageSize;
        const rows = document.querySelectorAll('.appointment-row');
        const totalPages = Math.ceil(rows.length / pageSize);
        const pagination = document.getElementById("pagination");
        const selectedIds = new Set();
        let deleteMode = false;

        function showPage(page) {
            rows.forEach((row, index) => {
                row.style.display = (index >= (page - 1) * pageSize && index < page * pageSize) ? '' : 'none';
            });

            pagination.innerHTML = '';
            for (let i = 1; i <= totalPages; i++) {
                const li = document.createElement("li");
                li.classList.add("page-item");
                if (i === page) li.classList.add("active");

                const a = document.createElement("a");
                a.classList.add("page-link");
                a.innerText = i;
                a.href = "#";
                a.onclick = (e) => {
                    e.preventDefault();
                    showPage(i);
                };

                li.appendChild(a);
                pagination.appendChild(li);
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            showPage(1);

            document.querySelectorAll("[id^='editForm-']").forEach(form => {
                form.addEventListener("submit", function (e) {
                    e.preventDefault();

                    const formData = new FormData(this);

                    fetch(`/AdminAccount/UpdateAppointment`, {
                        method: "POST",
                        body: formData
                    })
                        .then(res => res.ok ? res.json() : Promise.reject("Failed"))
                        .then(data => {
                            alert("Appointment updated successfully.");
                            location.reload();
                        })
                        .catch(err => {
                            console.error(err);
                            alert("Error updating appointment.");
                        });
                });
            });

            document.querySelectorAll(".delete-checkbox").forEach(cb => {
                cb.addEventListener("change", function () {
                    const id = parseInt(cb.value);
                    if (cb.checked) selectedIds.add(id);
                    else selectedIds.delete(id);
                });
            });

            document.getElementById("toggleDeleteMode").addEventListener("click", () => {
                const checkboxes = document.querySelectorAll(".delete-checkbox");
                const deleteIcon = document.getElementById("deleteIcon");

                if (!deleteMode) {
                    checkboxes.forEach(cb => cb.classList.remove("d-none"));
                    deleteIcon.classList.replace("bi-trash", "bi-check-lg");
                    deleteMode = true;
                } else {
                    if (selectedIds.size === 0) {
                        alert("Please select at least one appointment to delete.");
                        return;
                    }

                    const modal = new bootstrap.Modal(document.getElementById("confirmDeleteModal"));
                    modal.show();
                }
            });

            document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
                if (selectedIds.size === 0) return;

                const idsString = Array.from(selectedIds).join(",");

                fetch('/AdminAccount/Delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ ids: idsString })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const modalEl = document.getElementById("confirmDeleteModal");
                        const modalInstance = bootstrap.Modal.getInstance(modalEl);

                        if (modalInstance) {
                            modalInstance.hide();
                        }
                        // Show toast
                        const toastEl = document.getElementById('deleteToast');
                        toastEl.classList.remove('hide-toast');
                        toastEl.classList.add('custom-toast');

                        const toast = new bootstrap.Toast(toastEl, { autohide: false });
                        toast.show();

                        // Slide out after 4.5s
                        setTimeout(() => {
                            toastEl.classList.add('hide-toast');
                        }, 4500);

                        // Hide and reload after 5s
                        setTimeout(() => {
                            toast.hide();
                            location.reload();
                        }, 5000);
                    } else {
                        showErrorToast("Failed to delete appointments.");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showErrorToast("An error occurred while deleting.");
                });
            });

            document.getElementById("cancelDelete").addEventListener("click", function () {
                const confirmModal = bootstrap.Modal.getInstance(document.getElementById("confirmDeleteModal"));
                confirmModal.hide();
                exitDeleteMode();
            });
        });

        function exitDeleteMode() {
            deleteMode = false;
            document.getElementById("deleteIcon").classList.replace("bi-check-lg", "bi-trash");

            document.querySelectorAll(".delete-checkbox").forEach(cb => {
                cb.checked = false;
                cb.classList.add("d-none");
            });

            selectedIds.clear();
        }
    </script>
}

<style>
    .table thead th {
        white-space: nowrap;
        vertical-align: middle;
    }

    .table tbody tr:hover {
        background-color: #f9fafb;
    }

    .btn-group .btn {
        width: 34px;
        height: 34px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .page-link {
        border-radius: 10px !important;
        margin: 0 2px;
    }

    .modal-content {
        border: none;
    }
</style>